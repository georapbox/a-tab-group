function t(t, e, n) { if (!e.has(t)) throw new TypeError("attempted to " + n + " private field on non-instance"); return e.get(t) } function e(t, e) { return e.get ? e.get.call(t) : e.value } function n(n, s) { return e(n, t(n, s, "get")) } function s(t, e) { if (e.has(t)) throw new TypeError("Cannot initialize the same private elements twice on an object") } function a(t, e, n) { s(t, e), e.set(t, n) } function o(t, e, n) { if (e.set) e.set.call(t, n); else { if (!e.writable) throw new TypeError("attempted to set read only private field"); e.value = n } } function l(e, n, s) { return o(e, t(e, n, "set"), s), s } function i(t, e, n) { if (!e.has(t)) throw new TypeError("attempted to get private field on non-instance"); return n } function r(t, e) { s(t, e), e.add(t) } let c = 0; const h = document.createElement("template"); h.innerHTML = "\n  <style>\n    .close-tab {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0.25rem;\n      color: initial;\n      cursor: pointer;\n    }\n  </style>\n\n  <slot></slot>\n"; var d = new WeakMap, b = new WeakSet; class u extends HTMLElement { static get observedAttributes() { return ["selected", "disabled", "closable"] } connectedCallback() { i(this, b, p).call(this, "selected"), i(this, b, p).call(this, "disabled"), i(this, b, p).call(this, "closable"), this.id || (this.id = "a-tab-generated-" + c++), this.setAttribute("role", "tab"), this.setAttribute("aria-selected", "false"), this.setAttribute("tabindex", this.disabled ? -1 : 0) } disconnectedCallback() { const t = this.shadowRoot.querySelector(".close-tab"); t?.removeEventListener("click", n(this, d)) } attributeChangedCallback(t, e, s) { if ("selected" === t && e !== s && this.setAttribute("aria-selected", this.selected), "disabled" === t && e !== s && (this.setAttribute("aria-disabled", this.disabled), this.setAttribute("tabindex", this.disabled ? -1 : 0)), "closable" === t && e !== s) if (this.closable) { const t = document.createElement("span"); t.className = "close-tab", t.part = "close-tab", t.innerHTML = '<svg part="close-tab-icon" xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16"><path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z"/></svg>', this.shadowRoot.appendChild(t), t.addEventListener("click", n(this, d)) } else { const t = this.shadowRoot.querySelector(".close-tab"); t?.removeEventListener("click", n(this, d)), t?.remove() } } get selected() { return this.hasAttribute("selected") } set selected(t) { t ? this.setAttribute("selected", "") : this.removeAttribute("selected") } get disabled() { return this.hasAttribute("disabled") } set disabled(t) { t ? this.setAttribute("disabled", "") : this.removeAttribute("disabled") } get closable() { return this.hasAttribute("closable") } set closable(t) { t ? this.setAttribute("closable", "") : this.removeAttribute("closable") } constructor() { super(), r(this, b), a(this, d, { writable: !0, value: t => { t.stopPropagation(), this.dispatchEvent(new CustomEvent("a-tab-close", { bubbles: !0, composed: !0, detail: { tabId: this.id } })) } }), this.shadowRoot || (this.attachShadow({ mode: "open" }), this.shadowRoot.appendChild(h.content.cloneNode(!0))) } } function p(t) { if (Object.prototype.hasOwnProperty.call(this, t)) { const e = this[t]; delete this[t], this[t] = e } } window.customElements && !window.customElements.get("a-tab") && window.customElements.define("a-tab", u); let m = 0; class g extends HTMLElement { connectedCallback() { this.setAttribute("role", "tabpanel"), this.id || (this.id = "a-tab-panel-generated-" + m++) } constructor() { super() } } window.customElements && !window.customElements.get("a-tab-panel") && window.customElements.define("a-tab-panel", g); const w = "ArrowDown", f = "ArrowLeft", v = "ArrowRight", _ = "ArrowUp", y = "Home", E = "End", k = "Enter", S = "Space", A = document.createElement("template"); A.innerHTML = '\n  <style>\n    *,\n    *::after,\n    *::before {\n      box-sizing: inherit;\n      margin: 0;\n      padding: 0;\n    }\n\n    :host([hidden]),\n    [hidden] {\n      display: none !important;\n    }\n\n    :host {\n      --selected-tab-color: #005fcc;\n      --selected-tab-bg-color: transparent;\n      --tabs-scroll-behavior: smooth;\n      --scroll-button-width: 34px;\n      --scroll-button-height: 34px;\n      --scroll-button-inline-offset: 0rem;\n\n      display: block;\n      box-sizing: border-box;\n    }\n\n    .tab-group {\n      display: flex;\n      width: 100%;\n    }\n\n    .tab-group__nav {\n      position: relative;\n    }\n\n    .tab-group__nav--scrollable {\n      padding: 0 calc(var(--scroll-button-width) + var(--scroll-button-inline-offset));\n    }\n\n    .tab-group__scroll-button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      width: var(--scroll-button-width);\n      height: var(--scroll-button-height);\n      z-index: 1;\n      background-color: transparent;\n      border: 0;\n      cursor: pointer;\n    }\n\n    .tab-group__scroll-button--start {\n      left: var(--scroll-button-inline-offset);\n    }\n\n    .tab-group__scroll-button--end {\n      right: var(--scroll-button-inline-offset);\n    }\n\n    .tab-group__tabs {\n      display: flex;\n      padding: 0.25rem;\n      overflow-x: auto;\n      scroll-behavior: var(--tabs-scroll-behavior);\n      scrollbar-width: none;\n    }\n\n    .tab-group__tabs::-webkit-scrollbar {\n      display: none;\n    }\n\n    .tab-group__panels {\n      padding: 1rem 0;\n    }\n\n    ::slotted(a-tab) {\n      display: inline-flex;\n      align-items: center;\n      gap: 0.5rem;\n      padding: 0.375rem 0.75rem;\n      font-size: 1rem;\n      white-space: nowrap;\n      cursor: pointer;\n    }\n\n    ::slotted(a-tab[selected]) {\n      color: var(--selected-tab-color);\n      background-color: var(--selected-tab-bg-color);\n    }\n\n    ::slotted(a-tab[disabled]) {\n      opacity: 0.7;\n      cursor: not-allowed;\n    }\n\n    ::slotted(a-tab-panel) {\n      font-size: 1rem;\n    }\n\n    ::slotted(a-tab-panel:not([hidden])) {\n      display: block;\n    }\n\n    /* placement = top */\n    .tab-group,\n    :host([placement="top"]) .tab-group {\n      flex-direction: column;\n    }\n\n    /* placement = bottom */\n    :host([placement="bottom"]) .tab-group {\n      flex-direction: column;\n    }\n\n    :host([placement="bottom"]) .tab-group__nav {\n      order: 1;\n    }\n\n    /* placement = start */\n    :host([placement="start"]) .tab-group {\n      flex-direction: row;\n    }\n\n    :host([placement="start"]) .tab-group__tabs {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    :host([placement="start"]) .tab-group__panels {\n      flex: 1;\n      padding: 0 1rem;\n    }\n\n    /* placement = end */\n    :host([placement="end"]) .tab-group {\n      flex-direction: row;\n    }\n\n    :host([placement="end"]) .tab-group__nav {\n      order: 1;\n    }\n\n    :host([placement="end"]) .tab-group__tabs {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    :host([placement="end"]) .tab-group__panels {\n      flex: 1;\n      padding: 0 1rem;\n    }\n  </style>\n\n  <div part="base" class="tab-group">\n    <div class="tab-group__nav">\n      <button type="button" part="scroll-button scroll-button--start" class="tab-group__scroll-button tab-group__scroll-button--start" aria-label="Scroll to start">\n        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" part="scroll-button-icon">\n          <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/>\n        </svg>\n      </button>\n\n      <div part="tabs" class="tab-group__tabs" role="tablist">\n        <slot name="tab"></slot>\n      </div>\n\n      <button type="button" part="scroll-button scroll-button--end" class="tab-group__scroll-button tab-group__scroll-button--end" aria-label="Scroll to end">\n        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" part="scroll-button-icon">\n          <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>\n        </svg>\n      </button>\n    </div>\n\n    <div part="panels" class="tab-group__panels">\n      <slot name="panel"></slot>\n    </div>\n  </div>\n'; var x = new WeakMap, L = new WeakSet, C = new WeakSet, W = new WeakSet, R = new WeakSet, T = new WeakSet, q = new WeakSet, M = new WeakSet, z = new WeakSet, I = new WeakSet, D = new WeakSet, H = new WeakMap, B = new WeakMap, N = new WeakMap, O = new WeakMap, j = new WeakMap, P = new WeakSet, $ = new WeakSet, K = new WeakSet, U = new WeakSet; class Y extends HTMLElement { static get observedAttributes() { return ["placement", "no-scroll-controls"] } connectedCallback() { i(this, U, lt).call(this, "placement"), i(this, U, lt).call(this, "noScrollControls"), i(this, U, lt).call(this, "scrollDistance"), i(this, U, lt).call(this, "activation"); const t = this.shadowRoot.querySelector("slot[name=tab]"), e = this.shadowRoot.querySelector("slot[name=panel]"), s = this.shadowRoot.querySelector(".tab-group__tabs"), a = this.shadowRoot.querySelector(".tab-group__nav"), o = Array.from(this.shadowRoot.querySelectorAll(".tab-group__scroll-button")); t.addEventListener("slotchange", n(this, j)), e.addEventListener("slotchange", n(this, j)), s.addEventListener("click", n(this, B)), s.addEventListener("keydown", n(this, H)), o.forEach((t => t.addEventListener("click", n(this, N)))), this.addEventListener("a-tab-close", n(this, O)), "ResizeObserver" in window && l(this, x, new ResizeObserver((t => { const e = t?.[0], n = e?.target, s = n?.scrollWidth > (e?.borderBoxSize?.[0]?.inlineSize || n?.clientWidth); o.forEach((t => t.hidden = !s)), a.classList.toggle("tab-group__nav--scrollable", s) }))), i(this, K, ot).call(this), this.hidden = 0 === i(this, T, Q).call(this).length, this.placement = this.placement || "top" } disconnectedCallback() { const t = this.shadowRoot.querySelector("slot[name=tab]"), e = this.shadowRoot.querySelector("slot[name=panel]"), s = this.shadowRoot.querySelector(".tab-group__tabs"), a = Array.from(this.shadowRoot.querySelectorAll(".tab-group__scroll-button")); t.removeEventListener("slotchange", n(this, j)), e.removeEventListener("slotchange", n(this, j)), s.removeEventListener("click", n(this, B)), s.removeEventListener("keydown", n(this, H)), a.forEach((t => t.removeEventListener("click", n(this, N)))), this.removeEventListener("a-tab-close", n(this, O)), i(this, C, F).call(this) } attributeChangedCallback(t, e, n) { "placement" === t && e !== n && i(this, K, ot).call(this), "no-scroll-controls" === t && e !== n && i(this, K, ot).call(this) } get placement() { return this.getAttribute("placement") } set placement(t) { this.setAttribute("placement", t) } get noScrollControls() { return this.hasAttribute("no-scroll-controls") } set noScrollControls(t) { t ? this.setAttribute("no-scroll-controls", "") : this.removeAttribute("no-scroll-controls") } get scrollDistance() { return Math.abs(this.getAttribute("scroll-distance")) || 200 } set scrollDistance(t) { this.setAttribute("scroll-distance", Math.abs(t) || 200) } get activation() { return this.getAttribute("activation") || "auto" } set activation(t) { this.setAttribute("activation", t || "auto") } selectTabByIndex(t) { const e = i(this, T, Q).call(this)[t]; !e || e.disabled || e.selected || (i(this, $, at).call(this, e), this.dispatchEvent(new CustomEvent("a-tab-select", { bubbles: !0, composed: !0, detail: { tabId: e.id } }))) } selectTab(t) { !t || t.disabled || t.selected || (i(this, $, at).call(this, t), t.focus(), this.dispatchEvent(new CustomEvent("a-tab-select", { bubbles: !0, composed: !0, detail: { tabId: t.id } }))) } constructor() { super(), r(this, L), r(this, C), r(this, W), r(this, R), r(this, T), r(this, q), r(this, M), r(this, z), r(this, I), r(this, D), r(this, P), r(this, $), r(this, K), r(this, U), a(this, x, { writable: !0, value: void 0 }), a(this, H, { writable: !0, value: t => { if ("a-tab" !== t.target.tagName.toLowerCase()) return; if (t.altKey) return; let e; switch (t.code) { case f: case _: e = i(this, I, et).call(this), "manual" === this.activation ? e.focus() : this.selectTab(e); break; case v: case w: e = i(this, D, nt).call(this), "manual" === this.activation ? e.focus() : this.selectTab(e); break; case y: e = i(this, M, X).call(this), "manual" === this.activation ? e.focus() : this.selectTab(e); break; case E: e = i(this, z, tt).call(this), "manual" === this.activation ? e.focus() : this.selectTab(e); break; case k: case S: e = t.target, this.selectTab(e); break; default: return }t.preventDefault() } }), a(this, B, { writable: !0, value: t => { const e = t.target.closest("a-tab"); this.selectTab(e) } }), a(this, N, { writable: !0, value: t => { const e = t.target.closest(".tab-group__scroll-button"); if (!e) return; const n = this.shadowRoot.querySelector(".tab-group__tabs"), s = e.classList.contains("tab-group__scroll-button--start") ? "start" : "end"; n.scrollBy({ left: "start" === s ? -this.scrollDistance : this.scrollDistance }) } }), a(this, O, { writable: !0, value: t => { const e = t.target, n = i(this, q, V).call(this, e); e && "a-tab-panel" === n.tagName.toLowerCase() && (n.remove(), e.remove()) } }), a(this, j, { writable: !0, value: () => { i(this, W, G).call(this), i(this, K, ot).call(this) } }), this.shadowRoot || (this.attachShadow({ mode: "open" }), this.shadowRoot.appendChild(A.content.cloneNode(!0))) } } function Z() { if (!n(this, x)) return; const t = this.shadowRoot.querySelector(".tab-group__tabs"); n(this, x).unobserve(t), n(this, x).observe(t) } function F() { n(this, x) && n(this, x).disconnect() } function G() { const t = i(this, T, Q).call(this); this.hidden = 0 === t.length, t.forEach((t => { const e = t.nextElementSibling; if (!e || "a-tab-panel" !== e.tagName.toLowerCase()) return console.error(`Tab #${t.id} is not a sibling of a <a-tab-panel>`); t.setAttribute("aria-controls", e.id), e.setAttribute("aria-labelledby", t.id) })); const e = t.find((t => t.selected && !t.disabled)) || t.find((t => !t.disabled)); i(this, $, at).call(this, e) } function J() { return Array.from(this.querySelectorAll("a-tab-panel")) } function Q() { return Array.from(this.querySelectorAll("a-tab")) } function V(t) { const e = t.getAttribute("aria-controls"); return this.querySelector(`#${e}`) } function X() { return i(this, T, Q).call(this).find((t => !t.disabled)) } function tt() { const t = i(this, T, Q).call(this); for (let e = t.length - 1; e >= 0; e--)if (!t[e].disabled) return t[e] } function et() { const t = i(this, T, Q).call(this); let e = "manual" === this.activation ? t.findIndex((t => t.matches(":focus"))) - 1 : t.findIndex((t => t.selected)) - 1; for (; t[(e + t.length) % t.length].disabled;)e--; return t[(e + t.length) % t.length] } function nt() { const t = i(this, T, Q).call(this); let e = "manual" === this.activation ? t.findIndex((t => t.matches(":focus"))) + 1 : t.findIndex((t => t.selected)) + 1; for (; t[e % t.length].disabled;)e++; return t[e % t.length] } function st() { const t = i(this, T, Q).call(this), e = i(this, R, J).call(this); t.forEach((t => t.selected = !1)), e.forEach((t => t.hidden = !0)) } function at(t) { if (i(this, P, st).call(this), !t) return; const e = i(this, q, V).call(this, t); e && (t.selected = !0, e.hidden = !1) } function ot() { const t = this.shadowRoot.querySelector(".tab-group__nav"), e = Array.from(this.shadowRoot.querySelectorAll(".tab-group__scroll-button")); this.noScrollControls || "start" === this.placement || "end" === this.placement ? (i(this, C, F).call(this), e.forEach((t => t.hidden = !0)), t.classList.remove("tab-group__nav--scrollable")) : (i(this, L, Z).call(this), e.forEach((t => t.hidden = !1))) } function lt(t) { if (Object.prototype.hasOwnProperty.call(this, t)) { const e = this[t]; delete this[t], this[t] = e } } window.customElements && !window.customElements.get("a-tab-group") && window.customElements.define("a-tab-group", Y);
