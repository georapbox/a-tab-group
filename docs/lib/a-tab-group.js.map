{"mappings":"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","sources":["<anon>","src/a-tab-group.js","src/a-tab.js","src/a-tab-panel.js"],"sourcesContent":["const $4b127c96b8d62b28$var$A_TAB = \"a-tab\";\nconst $4b127c96b8d62b28$var$template = document.createElement(\"template\");\nlet $4b127c96b8d62b28$var$tabCounter = 0;\n$4b127c96b8d62b28$var$template.innerHTML = /* html */ `\n  <style>\n    .tab {\n      display: inline-flex;\n      align-items: center;\n      gap: 0.5rem;\n      padding: 0.375rem 0.75rem;\n      white-space: nowrap;\n      cursor: pointer;\n    }\n\n    :host([disabled]) .tab {\n      opacity: 0.7;\n      cursor: not-allowed;\n    }\n\n    :host([selected]) .tab {\n      color: var(--selected-tab-color);\n      background-color: var(--selected-tab-bg-color);\n    }\n\n    .tab__close {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0.25rem;\n      font-size: inherit;\n      cursor: pointer;\n    }\n  </style>\n\n  <div part=\"base\" class=\"tab\">\n    <slot></slot>\n  </div>\n`;\n/**\n * `Tab` is a tab for a `<a-tab-group>` tab panel.\n * `<a-tab>` should always be used with `role=heading` in the markup so that the\n * semantics remain useable when JavaScript is failing.\n *\n * A `<a-tab>` declares which `<a-tab-panel>` it belongs to by\n * using that panel's ID as the value for the `aria-controls` attribute.\n *\n * A `<a-tab>` will automatically generate a unique ID if none is specified.\n */ class $4b127c96b8d62b28$var$Tab extends HTMLElement {\n    static get observedAttributes() {\n        return [\n            \"selected\",\n            \"disabled\",\n            \"closable\"\n        ];\n    }\n    constructor(){\n        super();\n        if (!this.shadowRoot) {\n            this.attachShadow({\n                mode: \"open\"\n            });\n            this.shadowRoot.appendChild($4b127c96b8d62b28$var$template.content.cloneNode(true));\n        }\n    }\n    connectedCallback() {\n        this.#upgradeProperty(\"selected\");\n        this.#upgradeProperty(\"disabled\");\n        this.#upgradeProperty(\"closable\");\n        if (!this.id) this.id = `a-tab-generated-${$4b127c96b8d62b28$var$tabCounter++}`;\n        this.setAttribute(\"role\", \"tab\");\n        this.setAttribute(\"aria-selected\", \"false\");\n        this.setAttribute(\"tabindex\", this.disabled ? -1 : 0);\n    }\n    disconnectedCallback() {\n        const closeButton = this.shadowRoot.querySelector(\".tab__close\");\n        closeButton?.removeEventListener(\"click\", this.#onCloseButtonClick);\n    }\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === \"selected\" && oldValue !== newValue) this.setAttribute(\"aria-selected\", this.selected);\n        if (name === \"disabled\" && oldValue !== newValue) {\n            this.setAttribute(\"aria-disabled\", this.disabled);\n            this.setAttribute(\"tabindex\", this.disabled ? -1 : 0);\n        }\n        if (name === \"closable\" && oldValue !== newValue) {\n            if (this.closable) {\n                const closeButton = document.createElement(\"span\");\n                closeButton.className = \"tab__close\";\n                closeButton.part = \"close-tab\";\n                closeButton.innerHTML = /* html */ `<svg part=\"close-tab-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"0.875em\" fill=\"currentColor\" viewBox=\"0 0 16 16\"><path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\"/></svg>`;\n                this.shadowRoot.querySelector(\".tab\").appendChild(closeButton);\n                closeButton.addEventListener(\"click\", this.#onCloseButtonClick);\n            } else {\n                const closeButton = this.shadowRoot.querySelector(\".tab__close\");\n                closeButton?.removeEventListener(\"click\", this.#onCloseButtonClick);\n                closeButton?.remove();\n            }\n        }\n    }\n    get selected() {\n        return this.hasAttribute(\"selected\");\n    }\n    set selected(value) {\n        if (value) this.setAttribute(\"selected\", \"\");\n        else this.removeAttribute(\"selected\");\n    }\n    get disabled() {\n        return this.hasAttribute(\"disabled\");\n    }\n    set disabled(value) {\n        if (value) this.setAttribute(\"disabled\", \"\");\n        else this.removeAttribute(\"disabled\");\n    }\n    get closable() {\n        return this.hasAttribute(\"closable\");\n    }\n    set closable(value) {\n        if (value) this.setAttribute(\"closable\", \"\");\n        else this.removeAttribute(\"closable\");\n    }\n    /**\n   * Handles the click event on the close button.\n   *\n   * @param {MouseEvent} evt The click event.\n   */ #onCloseButtonClick = (evt)=>{\n        evt.stopPropagation();\n        this.dispatchEvent(new CustomEvent(`${$4b127c96b8d62b28$var$A_TAB}-close`, {\n            bubbles: true,\n            composed: true,\n            detail: {\n                tabId: this.id\n            }\n        }));\n    };\n    /**\n   * https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n   * This is to safe guard against cases where, for instance, a framework may have added the element to the page and set a\n   * value on one of its properties, but lazy loaded its definition. Without this guard, the upgraded element would miss that\n   * property and the instance property would prevent the class property setter from ever being called.\n   */ #upgradeProperty(prop) {\n        if (Object.prototype.hasOwnProperty.call(this, prop)) {\n            const value = this[prop];\n            delete this[prop];\n            this[prop] = value;\n        }\n    }\n}\nif (window.customElements && !window.customElements.get($4b127c96b8d62b28$var$A_TAB)) window.customElements.define($4b127c96b8d62b28$var$A_TAB, $4b127c96b8d62b28$var$Tab);\n\n\nconst $17a63ddf0f11756d$var$A_TAB_PANEL = \"a-tab-panel\";\nconst $17a63ddf0f11756d$var$template = document.createElement(\"template\");\nlet $17a63ddf0f11756d$var$panelCounter = 0;\n$17a63ddf0f11756d$var$template.innerHTML = /* html */ `\n  <div part=\"base\" class=\"tab-panel\">\n    <slot></slot>\n  </div>\n`;\n/**\n * `TabPanel` is a panel for a `<a-tab-group>` tab panel.\n */ class $17a63ddf0f11756d$var$TabPanel extends HTMLElement {\n    constructor(){\n        super();\n        if (!this.shadowRoot) {\n            this.attachShadow({\n                mode: \"open\"\n            });\n            this.shadowRoot.appendChild($17a63ddf0f11756d$var$template.content.cloneNode(true));\n        }\n    }\n    connectedCallback() {\n        this.setAttribute(\"role\", \"tabpanel\");\n        if (!this.id) this.id = `a-tab-panel-generated-${$17a63ddf0f11756d$var$panelCounter++}`;\n    }\n}\nif (window.customElements && !window.customElements.get($17a63ddf0f11756d$var$A_TAB_PANEL)) window.customElements.define($17a63ddf0f11756d$var$A_TAB_PANEL, $17a63ddf0f11756d$var$TabPanel);\n\n\nconst $6ed9897cfe6c2018$var$A_TAB_GROUP = \"a-tab-group\";\nconst $6ed9897cfe6c2018$var$A_TAB = \"a-tab\";\nconst $6ed9897cfe6c2018$var$A_TAB_PANEL = \"a-tab-panel\";\nconst $6ed9897cfe6c2018$var$DEFAULT_SCROLL_DISTANCE = 200;\nconst $6ed9897cfe6c2018$var$PLACEMENT_TOP = \"top\";\nconst $6ed9897cfe6c2018$var$PLACEMENT_BOTTOM = \"bottom\";\nconst $6ed9897cfe6c2018$var$PLACEMENT_START = \"start\";\nconst $6ed9897cfe6c2018$var$PLACEMENT_END = \"end\";\nconst $6ed9897cfe6c2018$var$ACTIVATION_AUTO = \"auto\";\nconst $6ed9897cfe6c2018$var$ACTIVATION_MANUAL = \"manual\";\n/**\n * Define key codes to help with handling keyboard events.\n */ const $6ed9897cfe6c2018$var$KEYCODE = {\n    DOWN: \"ArrowDown\",\n    LEFT: \"ArrowLeft\",\n    RIGHT: \"ArrowRight\",\n    UP: \"ArrowUp\",\n    HOME: \"Home\",\n    END: \"End\",\n    ENTER: \"Enter\",\n    SPACE: \"Space\"\n};\nconst $6ed9897cfe6c2018$var$template = document.createElement(\"template\");\n$6ed9897cfe6c2018$var$template.innerHTML = /* html */ `\n  <style>\n    *,\n    *::after,\n    *::before {\n      box-sizing: inherit;\n      margin: 0;\n      padding: 0;\n    }\n\n    :host([hidden]),\n    [hidden],\n    ::slotted([hidden]) {\n      display: none !important;\n    }\n\n    :host {\n      --selected-tab-color: #005fcc;\n      --selected-tab-bg-color: transparent;\n      --tabs-scroll-behavior: smooth;\n      --scroll-button-width: 2.125em;\n      --scroll-button-height: 2.125em;\n      --scroll-button-inline-offset: 0rem;\n\n      display: block;\n      box-sizing: border-box;\n    }\n\n    .tab-group {\n      display: flex;\n      width: 100%;\n    }\n\n    .tab-group__nav {\n      position: relative;\n    }\n\n    .tab-group__nav--scrollable {\n      padding: 0 calc(var(--scroll-button-width) + var(--scroll-button-inline-offset));\n    }\n\n    .tab-group__scroll-button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      width: var(--scroll-button-width);\n      height: var(--scroll-button-height);\n      border: 0;\n      z-index: 1;\n      background-color: transparent;\n      font-size: inherit;\n      cursor: pointer;\n    }\n\n    .tab-group__scroll-button--start {\n      left: var(--scroll-button-inline-offset);\n    }\n\n    .tab-group__scroll-button--end {\n      right: var(--scroll-button-inline-offset);\n    }\n\n    .tab-group__tabs {\n      display: flex;\n      padding: 0.25rem;\n      overflow-x: auto;\n      scroll-behavior: var(--tabs-scroll-behavior);\n      scrollbar-width: none;\n    }\n\n    .tab-group__tabs::-webkit-scrollbar {\n      display: none;\n    }\n\n    .tab-group__panels {\n      padding: 1rem 0;\n    }\n\n    /* placement=\"top\" */\n    .tab-group,\n    :host([placement=\"top\"]) .tab-group {\n      flex-direction: column;\n    }\n\n    /* placement=\"bottom\" */\n    :host([placement=\"${$6ed9897cfe6c2018$var$PLACEMENT_BOTTOM}\"]) .tab-group {\n      flex-direction: column;\n    }\n\n    :host([placement=\"${$6ed9897cfe6c2018$var$PLACEMENT_BOTTOM}\"]) .tab-group__nav {\n      order: 1;\n    }\n\n    /* placement=\"start\" */\n    :host([placement=\"${$6ed9897cfe6c2018$var$PLACEMENT_START}\"]) .tab-group {\n      flex-direction: row;\n    }\n\n    :host([placement=\"${$6ed9897cfe6c2018$var$PLACEMENT_START}\"]) .tab-group__tabs {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    :host([placement=\"${$6ed9897cfe6c2018$var$PLACEMENT_START}\"]) .tab-group__panels {\n      flex: 1;\n      padding: 0 1rem;\n    }\n\n    /* placement=\"end\" */\n    :host([placement=\"${$6ed9897cfe6c2018$var$PLACEMENT_END}\"]) .tab-group {\n      flex-direction: row;\n    }\n\n    :host([placement=\"${$6ed9897cfe6c2018$var$PLACEMENT_END}\"]) .tab-group__nav {\n      order: 1;\n    }\n\n    :host([placement=\"${$6ed9897cfe6c2018$var$PLACEMENT_END}\"]) .tab-group__tabs {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    :host([placement=\"${$6ed9897cfe6c2018$var$PLACEMENT_END}\"]) .tab-group__panels {\n      flex: 1;\n      padding: 0 1rem;\n    }\n  </style>\n\n  <div part=\"base\" class=\"tab-group\">\n    <div class=\"tab-group__nav\">\n      <button type=\"button\" part=\"scroll-button scroll-button--start\" class=\"tab-group__scroll-button tab-group__scroll-button--start\" aria-label=\"Scroll to start\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 16 16\" part=\"scroll-button-icon\">\n          <path fill-rule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"/>\n        </svg>\n      </button>\n\n      <div part=\"tabs\" class=\"tab-group__tabs\" role=\"tablist\">\n        <slot name=\"tab\"></slot>\n      </div>\n\n      <button type=\"button\" part=\"scroll-button scroll-button--end\" class=\"tab-group__scroll-button tab-group__scroll-button--end\" aria-label=\"Scroll to end\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 16 16\" part=\"scroll-button-icon\">\n          <path fill-rule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"/>\n        </svg>\n      </button>\n    </div>\n\n    <div part=\"panels\" class=\"tab-group__panels\">\n      <slot name=\"panel\"></slot>\n    </div>\n  </div>\n`;\n/**\n * Container element for tabs and panels.\n * All children of `<a-tab-group>` should be either `<a-tab>` or `<a-tab-panel>`.\n */ class $6ed9897cfe6c2018$var$TabGroup extends HTMLElement {\n    #shouldPanelTransitionBeEnabled = false;\n    #resizeObserver;\n    static get observedAttributes() {\n        return [\n            \"placement\",\n            \"no-scroll-controls\"\n        ];\n    }\n    constructor(){\n        super();\n        if (!this.shadowRoot) {\n            this.attachShadow({\n                mode: \"open\"\n            });\n            this.shadowRoot.appendChild($6ed9897cfe6c2018$var$template.content.cloneNode(true));\n        }\n    }\n    connectedCallback() {\n        this.#upgradeProperty(\"placement\");\n        this.#upgradeProperty(\"noScrollControls\");\n        this.#upgradeProperty(\"scrollDistance\");\n        this.#upgradeProperty(\"activation\");\n        this.#upgradeProperty(\"panelTransition\");\n        const tabSlot = this.shadowRoot.querySelector(\"slot[name=tab]\");\n        const panelSlot = this.shadowRoot.querySelector(\"slot[name=panel]\");\n        const tabsContainer = this.shadowRoot.querySelector(\".tab-group__tabs\");\n        const navContainer = this.shadowRoot.querySelector(\".tab-group__nav\");\n        const scrollButtons = Array.from(this.shadowRoot.querySelectorAll(\".tab-group__scroll-button\"));\n        tabSlot.addEventListener(\"slotchange\", this.#handleSlotChange);\n        panelSlot.addEventListener(\"slotchange\", this.#handleSlotChange);\n        tabsContainer.addEventListener(\"click\", this.#handleTabClick);\n        tabsContainer.addEventListener(\"keydown\", this.#handleKeyDown);\n        scrollButtons.forEach((el)=>el.addEventListener(\"click\", this.#handleScrollButtonClick));\n        this.addEventListener(`${$6ed9897cfe6c2018$var$A_TAB}-close`, this.#handleTabClose);\n        if (\"ResizeObserver\" in window) this.#resizeObserver = new ResizeObserver((entries)=>{\n            const entry = entries?.[0];\n            const targetElement = entry?.target;\n            const isElementScrollable = targetElement?.scrollWidth > (entry?.borderBoxSize?.[0]?.inlineSize || targetElement?.clientWidth);\n            scrollButtons.forEach((el)=>el.hidden = !isElementScrollable);\n            navContainer.classList.toggle(\"tab-group__nav--scrollable\", isElementScrollable);\n        });\n        this.#syncNav();\n        this.hidden = this.#allTabs().length === 0;\n        this.placement = this.placement || $6ed9897cfe6c2018$var$PLACEMENT_TOP; // Set by default to `top` to reflect the default value in the CSS.\n    }\n    disconnectedCallback() {\n        const tabSlot = this.shadowRoot.querySelector(\"slot[name=tab]\");\n        const panelSlot = this.shadowRoot.querySelector(\"slot[name=panel]\");\n        const tabsContainer = this.shadowRoot.querySelector(\".tab-group__tabs\");\n        const scrollButtons = Array.from(this.shadowRoot.querySelectorAll(\".tab-group__scroll-button\"));\n        tabSlot.removeEventListener(\"slotchange\", this.#handleSlotChange);\n        panelSlot.removeEventListener(\"slotchange\", this.#handleSlotChange);\n        tabsContainer.removeEventListener(\"click\", this.#handleTabClick);\n        tabsContainer.removeEventListener(\"keydown\", this.#handleKeyDown);\n        scrollButtons.forEach((el)=>el.removeEventListener(\"click\", this.#handleScrollButtonClick));\n        this.removeEventListener(`${$6ed9897cfe6c2018$var$A_TAB}-close`, this.#handleTabClose);\n        this.#stopResizeObserver();\n    }\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === \"placement\" && oldValue !== newValue) this.#syncNav();\n        if (name === \"no-scroll-controls\" && oldValue !== newValue) this.#syncNav();\n    }\n    get placement() {\n        return this.getAttribute(\"placement\");\n    }\n    set placement(value) {\n        this.setAttribute(\"placement\", value);\n    }\n    get noScrollControls() {\n        return this.hasAttribute(\"no-scroll-controls\");\n    }\n    set noScrollControls(value) {\n        if (value) this.setAttribute(\"no-scroll-controls\", \"\");\n        else this.removeAttribute(\"no-scroll-controls\");\n    }\n    get scrollDistance() {\n        return Math.abs(this.getAttribute(\"scroll-distance\")) || $6ed9897cfe6c2018$var$DEFAULT_SCROLL_DISTANCE;\n    }\n    set scrollDistance(value) {\n        this.setAttribute(\"scroll-distance\", Math.abs(value) || $6ed9897cfe6c2018$var$DEFAULT_SCROLL_DISTANCE);\n    }\n    get activation() {\n        return this.getAttribute(\"activation\") || $6ed9897cfe6c2018$var$ACTIVATION_AUTO;\n    }\n    set activation(value) {\n        this.setAttribute(\"activation\", value || $6ed9897cfe6c2018$var$ACTIVATION_AUTO);\n    }\n    get panelTransition() {\n        return this.hasAttribute(\"panel-transition\");\n    }\n    set panelTransition(value) {\n        if (value) this.setAttribute(\"panel-transition\", \"\");\n        else this.removeAttribute(\"panel-transition\");\n    }\n    #startResizeObserver() {\n        if (!this.#resizeObserver) return;\n        const scrollElement = this.shadowRoot.querySelector(\".tab-group__tabs\");\n        this.#resizeObserver.unobserve(scrollElement);\n        this.#resizeObserver.observe(scrollElement);\n    }\n    #stopResizeObserver() {\n        if (!this.#resizeObserver) return;\n        this.#resizeObserver.disconnect();\n    }\n    /**\n   * Links up tabs with their adjacent panels using `aria-controls` and `aria-labelledby`.\n   * This method makes sure only one tab is selected at a time.\n   */ #linkPanels() {\n        const tabs = this.#allTabs();\n        // Hide the tab group if there are no tabs.\n        this.hidden = tabs.length === 0;\n        // Give each panel a `aria-labelledby` attribute that refers to the tab that controls it.\n        tabs.forEach((tab)=>{\n            const panel = tab.nextElementSibling;\n            if (!panel || panel.tagName.toLowerCase() !== $6ed9897cfe6c2018$var$A_TAB_PANEL) return console.error(`Tab #${tab.id} is not a sibling of a <a-tab-panel>`);\n            tab.setAttribute(\"aria-controls\", panel.id);\n            panel.setAttribute(\"aria-labelledby\", tab.id);\n        });\n        // Get the selected non-disabled tab, or the first non-disabled tab.\n        const tab = tabs.find((tab)=>tab.selected && !tab.disabled) || tabs.find((tab)=>!tab.disabled);\n        this.#markTabSelected(tab);\n    }\n    /**\n   * Get all panels in the tab group.\n   *\n   * @returns {HTMLElement[]} All the panels in the tab group.\n   */ #allPanels() {\n        return Array.from(this.querySelectorAll($6ed9897cfe6c2018$var$A_TAB_PANEL));\n    }\n    /**\n   * Get all tabs in the tab group.\n   *\n   * @returns {HTMLElement[]} All the tabs in the tab group.\n   */ #allTabs() {\n        return Array.from(this.querySelectorAll($6ed9897cfe6c2018$var$A_TAB));\n    }\n    /**\n   * Get the panel for the given tab.\n   *\n   * @param {HTMLElement} tab The tab whose panel is to be returned.\n   * @returns {HTMLElement} The panel controlled by the given tab.\n   */ #panelForTab(tab) {\n        const panelId = tab.getAttribute(\"aria-controls\");\n        return this.querySelector(`#${panelId}`);\n    }\n    /**\n   * Get the first non-disabled tab in the tab group.\n   *\n   * @returns {HTMLElement} The first tab in the tab group.\n   */ #firstTab() {\n        const tabs = this.#allTabs();\n        return tabs.find((tab)=>!tab.disabled);\n    }\n    /**\n   * Get the last non-disabled tab in the tab group.\n   *\n   * @returns {HTMLElement} The last tab in the tab group.\n   */ #lastTab() {\n        const tabs = this.#allTabs();\n        for(let i = tabs.length - 1; i >= 0; i--){\n            if (!tabs[i].disabled) return tabs[i];\n        }\n    }\n    /**\n   * Get the tab that comes before the currently selected one, wrapping around when reaching the first tab.\n   * If the currently selected tab is disabled, the method will skip it.\n   *\n   * @returns {HTMLElement} The previous tab.\n   */ #prevTab() {\n        const tabs = this.#allTabs();\n        let newIdx = this.activation === $6ed9897cfe6c2018$var$ACTIVATION_MANUAL ? tabs.findIndex((tab)=>tab.matches(\":focus\")) - 1 : tabs.findIndex((tab)=>tab.selected) - 1;\n        // Keep looping until we find a non-disabled tab.\n        while(tabs[(newIdx + tabs.length) % tabs.length].disabled)newIdx--;\n        // Add `tabs.length` to make sure the index is a positive number and get the modulus to wrap around if necessary.\n        return tabs[(newIdx + tabs.length) % tabs.length];\n    }\n    /**\n   * Get the tab that comes after the currently selected one, wrapping around when reaching the last tab.\n   * If the currently selected tab is disabled, the method will skip it.\n   *\n   * @returns {HTMLElement} The next tab.\n   */ #nextTab() {\n        const tabs = this.#allTabs();\n        let newIdx = this.activation === $6ed9897cfe6c2018$var$ACTIVATION_MANUAL ? tabs.findIndex((tab)=>tab.matches(\":focus\")) + 1 : tabs.findIndex((tab)=>tab.selected) + 1;\n        // Keep looping until we find a non-disabled tab.\n        while(tabs[newIdx % tabs.length].disabled)newIdx++;\n        return tabs[newIdx % tabs.length];\n    }\n    /**\n   * Handles key events on the tab group.\n   *\n   * @param {KeyboardEvent} evt The keydown event.\n   */ #handleKeyDown = (evt)=>{\n        if (evt.target.tagName.toLowerCase() !== $6ed9897cfe6c2018$var$A_TAB // Ignore any key presses that have a modifier.\n         || evt.altKey // Don’t handle modifier shortcuts typically used by assistive technology.\n        ) return;\n        let tab;\n        switch(evt.code){\n            case $6ed9897cfe6c2018$var$KEYCODE.LEFT:\n            case $6ed9897cfe6c2018$var$KEYCODE.UP:\n                tab = this.#prevTab();\n                this.activation === $6ed9897cfe6c2018$var$ACTIVATION_MANUAL ? tab.focus() : this.selectTab(tab);\n                break;\n            case $6ed9897cfe6c2018$var$KEYCODE.RIGHT:\n            case $6ed9897cfe6c2018$var$KEYCODE.DOWN:\n                tab = this.#nextTab();\n                this.activation === $6ed9897cfe6c2018$var$ACTIVATION_MANUAL ? tab.focus() : this.selectTab(tab);\n                break;\n            case $6ed9897cfe6c2018$var$KEYCODE.HOME:\n                tab = this.#firstTab();\n                this.activation === $6ed9897cfe6c2018$var$ACTIVATION_MANUAL ? tab.focus() : this.selectTab(tab);\n                break;\n            case $6ed9897cfe6c2018$var$KEYCODE.END:\n                tab = this.#lastTab();\n                this.activation === $6ed9897cfe6c2018$var$ACTIVATION_MANUAL ? tab.focus() : this.selectTab(tab);\n                break;\n            case $6ed9897cfe6c2018$var$KEYCODE.ENTER:\n            case $6ed9897cfe6c2018$var$KEYCODE.SPACE:\n                tab = evt.target;\n                this.selectTab(tab);\n                break;\n            default:\n                // Any other key press is ignored and passed back to the browser.\n                return;\n        }\n        // The browser might have some native functionality bound to the arrow keys, home or end.\n        // `preventDefault()` is called to prevent the browser from taking any actions.\n        evt.preventDefault();\n    };\n    /**\n   * Handles click events on the tab group.\n   *\n   * @param {MouseEvent} evt The click event.\n   */ #handleTabClick = (evt)=>{\n        const tab = evt.target.closest($6ed9897cfe6c2018$var$A_TAB);\n        this.selectTab(tab);\n    };\n    /**\n   * Handles the scroll button click event.\n   *\n   * @param {MouseEvent} evt The click event.\n   */ #handleScrollButtonClick = (evt)=>{\n        const scrollButton = evt.target.closest(\".tab-group__scroll-button\");\n        if (!scrollButton) return;\n        const tabsContainer = this.shadowRoot.querySelector(\".tab-group__tabs\");\n        const direction = scrollButton.classList.contains(\"tab-group__scroll-button--start\") ? $6ed9897cfe6c2018$var$PLACEMENT_START : $6ed9897cfe6c2018$var$PLACEMENT_END;\n        tabsContainer.scrollBy({\n            left: direction === $6ed9897cfe6c2018$var$PLACEMENT_START ? -this.scrollDistance : this.scrollDistance\n        });\n    };\n    /**\n   * Handles the tab close button click event.\n   *\n   * @param {MouseEvent} evt The click event.\n   */ #handleTabClose = (evt)=>{\n        const tab = evt.target;\n        const panel = this.#panelForTab(tab);\n        if (tab && panel.tagName.toLowerCase() === $6ed9897cfe6c2018$var$A_TAB_PANEL) {\n            panel.remove();\n            tab.remove();\n        }\n    };\n    /**\n   * Handles the slotchange event on the tab group.\n   * This is called every time the user adds or removes a tab or panel.\n   */ #handleSlotChange = ()=>{\n        this.#shouldPanelTransitionBeEnabled = false;\n        this.#linkPanels();\n        this.#syncNav();\n    };\n    /**\n   * Marks all tabs as unselected and hides all the panels.\n   * This is called every time the user selects a new tab.\n   */ #reset() {\n        const tabs = this.#allTabs();\n        const panels = this.#allPanels();\n        tabs.forEach((tab)=>tab.selected = false);\n        this.#startPanelTransition(()=>panels.forEach((panel)=>panel.hidden = true));\n    }\n    /**\n   * Marks the given tab as selected.\n   * Additionally, it unhides the panel corresponding to the given tab.\n   *\n   * @param {HTMLElement} newTab\n   */ #markTabSelected(newTab) {\n        // Unselect all tabs and hide all panels.\n        this.#reset();\n        // If the tab doesn’t exist or is already selected, abort.\n        if (!newTab || newTab.selected) return;\n        // Get the panel that the `newTab` is associated with.\n        const newPanel = this.#panelForTab(newTab);\n        // If that panel doesn’t exist, abort.\n        if (!newPanel) return;\n        newTab.selected = true;\n        this.#startPanelTransition(()=>newPanel.hidden = false);\n        this.#shouldPanelTransitionBeEnabled = true;\n    }\n    /**\n   * Syncs the tab group navigation with the current state of the tab group.\n   *\n   * This is called every time the user:\n   * - adds or removes a tab or panel\n   * - changes the placement of the tabs\n   * - enables or disables the scroll controls\n   *\n   * If the tabs container is scrollable and the scroll controls are enabled,\n   * the scroll buttons are displayed and the resize observer is started,\n   * otherwise they are hidden and the resize observer is stopped.\n   */ #syncNav() {\n        const navContainer = this.shadowRoot.querySelector(\".tab-group__nav\");\n        const scrollButtons = Array.from(this.shadowRoot.querySelectorAll(\".tab-group__scroll-button\"));\n        if (this.noScrollControls || this.placement === $6ed9897cfe6c2018$var$PLACEMENT_START || this.placement === $6ed9897cfe6c2018$var$PLACEMENT_END) {\n            this.#stopResizeObserver();\n            scrollButtons.forEach((el)=>el.hidden = true);\n            navContainer.classList.remove(\"tab-group__nav--scrollable\");\n        } else {\n            this.#startResizeObserver();\n            scrollButtons.forEach((el)=>el.hidden = false);\n        }\n    }\n    /**\n   * Starts the panel transition.\n   * If the panel transition is enabled, the callback is called when the transition is complete.\n   *\n   * @param {function} [callback = () => {}]\n   */ #startPanelTransition(callback = ()=>{}) {\n        const isPanelTransitionEnabled = typeof document.startViewTransition === \"function\" && window.matchMedia(\"(prefers-reduced-motion: no-preference)\").matches && this.#shouldPanelTransitionBeEnabled && this.panelTransition;\n        isPanelTransitionEnabled ? document.startViewTransition(callback) : callback();\n    }\n    /**\n   * https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n   * This is to safe guard against cases where, for instance, a framework may have added the element to the page and set a\n   * value on one of its properties, but lazy loaded its definition. Without this guard, the upgraded element would miss that\n   * property and the instance property would prevent the class property setter from ever being called.\n   */ #upgradeProperty(prop) {\n        if (Object.prototype.hasOwnProperty.call(this, prop)) {\n            const value = this[prop];\n            delete this[prop];\n            this[prop] = value;\n        }\n    }\n    /**\n   * Selects the tab at the given index.\n   * If the tab at the given index is disabled or already selected, this method does nothing.\n   *\n   * @param {Number} index The index of the tab to be selected.\n   */ selectTabByIndex(index) {\n        const tabs = this.#allTabs();\n        const tab = tabs[index];\n        this.selectTab(tab);\n    }\n    /**\n   * Selects the given tab.\n   * If the given tab is disabled or already selected, this method does nothing.\n   *\n   * @param {HTMLElement} tab The tab to be selected.\n   */ selectTab(tab) {\n        if (tab && !tab.disabled && !tab.selected) {\n            this.#markTabSelected(tab);\n            // Queue a microtask to ensure that the tab is focused on the next tick.\n            setTimeout(()=>tab.focus(), 0);\n            this.dispatchEvent(new CustomEvent(`${$6ed9897cfe6c2018$var$A_TAB}-select`, {\n                bubbles: true,\n                composed: true,\n                detail: {\n                    tabId: tab.id\n                }\n            }));\n        }\n    }\n}\nif (window.customElements && !window.customElements.get($6ed9897cfe6c2018$var$A_TAB_GROUP)) window.customElements.define($6ed9897cfe6c2018$var$A_TAB_GROUP, $6ed9897cfe6c2018$var$TabGroup);\n\n\n//# sourceMappingURL=a-tab-group.js.map\n","import './a-tab';\nimport './a-tab-panel.js';\n\nconst A_TAB_GROUP = 'a-tab-group';\nconst A_TAB = 'a-tab';\nconst A_TAB_PANEL = 'a-tab-panel';\nconst DEFAULT_SCROLL_DISTANCE = 200;\nconst PLACEMENT_TOP = 'top';\nconst PLACEMENT_BOTTOM = 'bottom';\nconst PLACEMENT_START = 'start';\nconst PLACEMENT_END = 'end';\nconst ACTIVATION_AUTO = 'auto';\nconst ACTIVATION_MANUAL = 'manual';\n\n/**\n * Define key codes to help with handling keyboard events.\n */\nconst KEYCODE = {\n  DOWN: 'ArrowDown',\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n  UP: 'ArrowUp',\n  HOME: 'Home',\n  END: 'End',\n  ENTER: 'Enter',\n  SPACE: 'Space'\n};\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /* html */`\n  <style>\n    *,\n    *::after,\n    *::before {\n      box-sizing: inherit;\n      margin: 0;\n      padding: 0;\n    }\n\n    :host([hidden]),\n    [hidden],\n    ::slotted([hidden]) {\n      display: none !important;\n    }\n\n    :host {\n      --selected-tab-color: #005fcc;\n      --selected-tab-bg-color: transparent;\n      --tabs-scroll-behavior: smooth;\n      --scroll-button-width: 2.125em;\n      --scroll-button-height: 2.125em;\n      --scroll-button-inline-offset: 0rem;\n\n      display: block;\n      box-sizing: border-box;\n    }\n\n    .tab-group {\n      display: flex;\n      width: 100%;\n    }\n\n    .tab-group__nav {\n      position: relative;\n    }\n\n    .tab-group__nav--scrollable {\n      padding: 0 calc(var(--scroll-button-width) + var(--scroll-button-inline-offset));\n    }\n\n    .tab-group__scroll-button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      width: var(--scroll-button-width);\n      height: var(--scroll-button-height);\n      border: 0;\n      z-index: 1;\n      background-color: transparent;\n      font-size: inherit;\n      cursor: pointer;\n    }\n\n    .tab-group__scroll-button--start {\n      left: var(--scroll-button-inline-offset);\n    }\n\n    .tab-group__scroll-button--end {\n      right: var(--scroll-button-inline-offset);\n    }\n\n    .tab-group__tabs {\n      display: flex;\n      padding: 0.25rem;\n      overflow-x: auto;\n      scroll-behavior: var(--tabs-scroll-behavior);\n      scrollbar-width: none;\n    }\n\n    .tab-group__tabs::-webkit-scrollbar {\n      display: none;\n    }\n\n    .tab-group__panels {\n      padding: 1rem 0;\n    }\n\n    /* placement=\"top\" */\n    .tab-group,\n    :host([placement=\"top\"]) .tab-group {\n      flex-direction: column;\n    }\n\n    /* placement=\"bottom\" */\n    :host([placement=\"${PLACEMENT_BOTTOM}\"]) .tab-group {\n      flex-direction: column;\n    }\n\n    :host([placement=\"${PLACEMENT_BOTTOM}\"]) .tab-group__nav {\n      order: 1;\n    }\n\n    /* placement=\"start\" */\n    :host([placement=\"${PLACEMENT_START}\"]) .tab-group {\n      flex-direction: row;\n    }\n\n    :host([placement=\"${PLACEMENT_START}\"]) .tab-group__tabs {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    :host([placement=\"${PLACEMENT_START}\"]) .tab-group__panels {\n      flex: 1;\n      padding: 0 1rem;\n    }\n\n    /* placement=\"end\" */\n    :host([placement=\"${PLACEMENT_END}\"]) .tab-group {\n      flex-direction: row;\n    }\n\n    :host([placement=\"${PLACEMENT_END}\"]) .tab-group__nav {\n      order: 1;\n    }\n\n    :host([placement=\"${PLACEMENT_END}\"]) .tab-group__tabs {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    :host([placement=\"${PLACEMENT_END}\"]) .tab-group__panels {\n      flex: 1;\n      padding: 0 1rem;\n    }\n  </style>\n\n  <div part=\"base\" class=\"tab-group\">\n    <div class=\"tab-group__nav\">\n      <button type=\"button\" part=\"scroll-button scroll-button--start\" class=\"tab-group__scroll-button tab-group__scroll-button--start\" aria-label=\"Scroll to start\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 16 16\" part=\"scroll-button-icon\">\n          <path fill-rule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"/>\n        </svg>\n      </button>\n\n      <div part=\"tabs\" class=\"tab-group__tabs\" role=\"tablist\">\n        <slot name=\"tab\"></slot>\n      </div>\n\n      <button type=\"button\" part=\"scroll-button scroll-button--end\" class=\"tab-group__scroll-button tab-group__scroll-button--end\" aria-label=\"Scroll to end\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 16 16\" part=\"scroll-button-icon\">\n          <path fill-rule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"/>\n        </svg>\n      </button>\n    </div>\n\n    <div part=\"panels\" class=\"tab-group__panels\">\n      <slot name=\"panel\"></slot>\n    </div>\n  </div>\n`;\n\n/**\n * Container element for tabs and panels.\n * All children of `<a-tab-group>` should be either `<a-tab>` or `<a-tab-panel>`.\n */\nclass TabGroup extends HTMLElement {\n  #shouldPanelTransitionBeEnabled = false; // Ensure that the first time a panel is shown, there will not be a transition.\n  #resizeObserver;\n\n  static get observedAttributes() {\n    return ['placement', 'no-scroll-controls'];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  connectedCallback() {\n    this.#upgradeProperty('placement');\n    this.#upgradeProperty('noScrollControls');\n    this.#upgradeProperty('scrollDistance');\n    this.#upgradeProperty('activation');\n    this.#upgradeProperty('panelTransition');\n\n    const tabSlot = this.shadowRoot.querySelector('slot[name=tab]');\n    const panelSlot = this.shadowRoot.querySelector('slot[name=panel]');\n    const tabsContainer = this.shadowRoot.querySelector('.tab-group__tabs');\n    const navContainer = this.shadowRoot.querySelector('.tab-group__nav');\n    const scrollButtons = Array.from(this.shadowRoot.querySelectorAll('.tab-group__scroll-button'));\n\n    tabSlot.addEventListener('slotchange', this.#handleSlotChange);\n    panelSlot.addEventListener('slotchange', this.#handleSlotChange);\n    tabsContainer.addEventListener('click', this.#handleTabClick);\n    tabsContainer.addEventListener('keydown', this.#handleKeyDown);\n    scrollButtons.forEach(el => el.addEventListener('click', this.#handleScrollButtonClick));\n    this.addEventListener(`${A_TAB}-close`, this.#handleTabClose);\n\n    if ('ResizeObserver' in window) {\n      this.#resizeObserver = new ResizeObserver(entries => {\n        const entry = entries?.[0];\n        const targetElement = entry?.target;\n        const isElementScrollable = targetElement?.scrollWidth > (entry?.borderBoxSize?.[0]?.inlineSize || targetElement?.clientWidth);\n        scrollButtons.forEach(el => el.hidden = !isElementScrollable);\n        navContainer.classList.toggle('tab-group__nav--scrollable', isElementScrollable);\n      });\n    }\n\n    this.#syncNav();\n    this.hidden = this.#allTabs().length === 0;\n    this.placement = this.placement || PLACEMENT_TOP; // Set by default to `top` to reflect the default value in the CSS.\n  }\n\n  disconnectedCallback() {\n    const tabSlot = this.shadowRoot.querySelector('slot[name=tab]');\n    const panelSlot = this.shadowRoot.querySelector('slot[name=panel]');\n    const tabsContainer = this.shadowRoot.querySelector('.tab-group__tabs');\n    const scrollButtons = Array.from(this.shadowRoot.querySelectorAll('.tab-group__scroll-button'));\n\n    tabSlot.removeEventListener('slotchange', this.#handleSlotChange);\n    panelSlot.removeEventListener('slotchange', this.#handleSlotChange);\n    tabsContainer.removeEventListener('click', this.#handleTabClick);\n    tabsContainer.removeEventListener('keydown', this.#handleKeyDown);\n    scrollButtons.forEach(el => el.removeEventListener('click', this.#handleScrollButtonClick));\n    this.removeEventListener(`${A_TAB}-close`, this.#handleTabClose);\n    this.#stopResizeObserver();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'placement' && oldValue !== newValue) {\n      this.#syncNav();\n    }\n\n    if (name === 'no-scroll-controls' && oldValue !== newValue) {\n      this.#syncNav();\n    }\n  }\n\n  get placement() {\n    return this.getAttribute('placement');\n  }\n\n  set placement(value) {\n    this.setAttribute('placement', value);\n  }\n\n  get noScrollControls() {\n    return this.hasAttribute('no-scroll-controls');\n  }\n\n  set noScrollControls(value) {\n    if (value) {\n      this.setAttribute('no-scroll-controls', '');\n    } else {\n      this.removeAttribute('no-scroll-controls');\n    }\n  }\n\n  get scrollDistance() {\n    return Math.abs(this.getAttribute('scroll-distance')) || DEFAULT_SCROLL_DISTANCE;\n  }\n\n  set scrollDistance(value) {\n    this.setAttribute('scroll-distance', Math.abs(value) || DEFAULT_SCROLL_DISTANCE);\n  }\n\n  get activation() {\n    return this.getAttribute('activation') || ACTIVATION_AUTO;\n  }\n\n  set activation(value) {\n    this.setAttribute('activation', value || ACTIVATION_AUTO);\n  }\n\n  get panelTransition() {\n    return this.hasAttribute('panel-transition');\n  }\n\n  set panelTransition(value) {\n    if (value) {\n      this.setAttribute('panel-transition', '');\n    } else {\n      this.removeAttribute('panel-transition');\n    }\n  }\n\n  #startResizeObserver() {\n    if (!this.#resizeObserver) {\n      return;\n    }\n\n    const scrollElement = this.shadowRoot.querySelector('.tab-group__tabs');\n\n    this.#resizeObserver.unobserve(scrollElement);\n    this.#resizeObserver.observe(scrollElement);\n  }\n\n  #stopResizeObserver() {\n    if (!this.#resizeObserver) {\n      return;\n    }\n\n    this.#resizeObserver.disconnect();\n  }\n\n  /**\n   * Links up tabs with their adjacent panels using `aria-controls` and `aria-labelledby`.\n   * This method makes sure only one tab is selected at a time.\n   */\n  #linkPanels() {\n    const tabs = this.#allTabs();\n\n    // Hide the tab group if there are no tabs.\n    this.hidden = tabs.length === 0;\n\n    // Give each panel a `aria-labelledby` attribute that refers to the tab that controls it.\n    tabs.forEach(tab => {\n      const panel = tab.nextElementSibling;\n\n      if (!panel || panel.tagName.toLowerCase() !== A_TAB_PANEL) {\n        return console.error(`Tab #${tab.id} is not a sibling of a <a-tab-panel>`);\n      }\n\n      tab.setAttribute('aria-controls', panel.id);\n      panel.setAttribute('aria-labelledby', tab.id);\n    });\n\n    // Get the selected non-disabled tab, or the first non-disabled tab.\n    const tab = tabs.find(tab => tab.selected && !tab.disabled) || tabs.find(tab => !tab.disabled);\n\n    this.#markTabSelected(tab);\n  }\n\n  /**\n   * Get all panels in the tab group.\n   *\n   * @returns {HTMLElement[]} All the panels in the tab group.\n   */\n  #allPanels() {\n    return Array.from(this.querySelectorAll(A_TAB_PANEL));\n  }\n\n  /**\n   * Get all tabs in the tab group.\n   *\n   * @returns {HTMLElement[]} All the tabs in the tab group.\n   */\n  #allTabs() {\n    return Array.from(this.querySelectorAll(A_TAB));\n  }\n\n  /**\n   * Get the panel for the given tab.\n   *\n   * @param {HTMLElement} tab The tab whose panel is to be returned.\n   * @returns {HTMLElement} The panel controlled by the given tab.\n   */\n  #panelForTab(tab) {\n    const panelId = tab.getAttribute('aria-controls');\n    return this.querySelector(`#${panelId}`);\n  }\n\n  /**\n   * Get the first non-disabled tab in the tab group.\n   *\n   * @returns {HTMLElement} The first tab in the tab group.\n   */\n  #firstTab() {\n    const tabs = this.#allTabs();\n    return tabs.find(tab => !tab.disabled);\n  }\n\n  /**\n   * Get the last non-disabled tab in the tab group.\n   *\n   * @returns {HTMLElement} The last tab in the tab group.\n   */\n  #lastTab() {\n    const tabs = this.#allTabs();\n\n    for (let i = tabs.length - 1; i >= 0; i--) {\n      if (!tabs[i].disabled) {\n        return tabs[i];\n      }\n    }\n  }\n\n  /**\n   * Get the tab that comes before the currently selected one, wrapping around when reaching the first tab.\n   * If the currently selected tab is disabled, the method will skip it.\n   *\n   * @returns {HTMLElement} The previous tab.\n   */\n  #prevTab() {\n    const tabs = this.#allTabs();\n    let newIdx = this.activation === ACTIVATION_MANUAL\n      ? tabs.findIndex(tab => tab.matches(':focus')) - 1\n      : tabs.findIndex(tab => tab.selected) - 1;\n\n    // Keep looping until we find a non-disabled tab.\n    while (tabs[(newIdx + tabs.length) % tabs.length].disabled) {\n      newIdx--;\n    }\n\n    // Add `tabs.length` to make sure the index is a positive number and get the modulus to wrap around if necessary.\n    return tabs[(newIdx + tabs.length) % tabs.length];\n  }\n\n  /**\n   * Get the tab that comes after the currently selected one, wrapping around when reaching the last tab.\n   * If the currently selected tab is disabled, the method will skip it.\n   *\n   * @returns {HTMLElement} The next tab.\n   */\n  #nextTab() {\n    const tabs = this.#allTabs();\n    let newIdx = this.activation === ACTIVATION_MANUAL\n      ? tabs.findIndex(tab => tab.matches(':focus')) + 1\n      : tabs.findIndex(tab => tab.selected) + 1;\n\n    // Keep looping until we find a non-disabled tab.\n    while (tabs[newIdx % tabs.length].disabled) {\n      newIdx++;\n    }\n\n    return tabs[newIdx % tabs.length];\n  }\n\n  /**\n   * Handles key events on the tab group.\n   *\n   * @param {KeyboardEvent} evt The keydown event.\n   */\n  #handleKeyDown = evt => {\n    if (\n      evt.target.tagName.toLowerCase() !== A_TAB // Ignore any key presses that have a modifier.\n      || evt.altKey // Don’t handle modifier shortcuts typically used by assistive technology.\n    ) {\n      return;\n    }\n\n    let tab;\n\n    switch (evt.code) {\n      case KEYCODE.LEFT:\n      case KEYCODE.UP:\n        tab = this.#prevTab();\n        this.activation === ACTIVATION_MANUAL ? tab.focus() : this.selectTab(tab);\n        break;\n      case KEYCODE.RIGHT:\n      case KEYCODE.DOWN:\n        tab = this.#nextTab();\n        this.activation === ACTIVATION_MANUAL ? tab.focus() : this.selectTab(tab);\n        break;\n      case KEYCODE.HOME:\n        tab = this.#firstTab();\n        this.activation === ACTIVATION_MANUAL ? tab.focus() : this.selectTab(tab);\n        break;\n      case KEYCODE.END:\n        tab = this.#lastTab();\n        this.activation === ACTIVATION_MANUAL ? tab.focus() : this.selectTab(tab);\n        break;\n      case KEYCODE.ENTER:\n      case KEYCODE.SPACE:\n        tab = evt.target;\n        this.selectTab(tab);\n        break;\n      default:\n        // Any other key press is ignored and passed back to the browser.\n        return;\n    }\n\n    // The browser might have some native functionality bound to the arrow keys, home or end.\n    // `preventDefault()` is called to prevent the browser from taking any actions.\n    evt.preventDefault();\n  };\n\n  /**\n   * Handles click events on the tab group.\n   *\n   * @param {MouseEvent} evt The click event.\n   */\n  #handleTabClick = evt => {\n    const tab = evt.target.closest(A_TAB);\n    this.selectTab(tab);\n  };\n\n  /**\n   * Handles the scroll button click event.\n   *\n   * @param {MouseEvent} evt The click event.\n   */\n  #handleScrollButtonClick = evt => {\n    const scrollButton = evt.target.closest('.tab-group__scroll-button');\n\n    if (!scrollButton) {\n      return;\n    }\n\n    const tabsContainer = this.shadowRoot.querySelector('.tab-group__tabs');\n    const direction = scrollButton.classList.contains('tab-group__scroll-button--start') ? PLACEMENT_START : PLACEMENT_END;\n\n    tabsContainer.scrollBy({\n      left: direction === PLACEMENT_START ? -this.scrollDistance : this.scrollDistance\n    });\n  };\n\n  /**\n   * Handles the tab close button click event.\n   *\n   * @param {MouseEvent} evt The click event.\n   */\n  #handleTabClose = evt => {\n    const tab = evt.target;\n    const panel = this.#panelForTab(tab);\n\n    if (tab && panel.tagName.toLowerCase() === A_TAB_PANEL) {\n      panel.remove();\n      tab.remove();\n    }\n  };\n\n  /**\n   * Handles the slotchange event on the tab group.\n   * This is called every time the user adds or removes a tab or panel.\n   */\n  #handleSlotChange = () => {\n    this.#shouldPanelTransitionBeEnabled = false;\n    this.#linkPanels();\n    this.#syncNav();\n  };\n\n  /**\n   * Marks all tabs as unselected and hides all the panels.\n   * This is called every time the user selects a new tab.\n   */\n  #reset() {\n    const tabs = this.#allTabs();\n    const panels = this.#allPanels();\n\n    tabs.forEach(tab => tab.selected = false);\n    this.#startPanelTransition(() => panels.forEach(panel => panel.hidden = true));\n  }\n\n  /**\n   * Marks the given tab as selected.\n   * Additionally, it unhides the panel corresponding to the given tab.\n   *\n   * @param {HTMLElement} newTab\n   */\n  #markTabSelected(newTab) {\n    // Unselect all tabs and hide all panels.\n    this.#reset();\n\n    // If the tab doesn’t exist or is already selected, abort.\n    if (!newTab || newTab.selected) {\n      return;\n    }\n\n    // Get the panel that the `newTab` is associated with.\n    const newPanel = this.#panelForTab(newTab);\n\n    // If that panel doesn’t exist, abort.\n    if (!newPanel) {\n      return;\n    }\n\n    newTab.selected = true;\n    this.#startPanelTransition(() => newPanel.hidden = false);\n    this.#shouldPanelTransitionBeEnabled = true;\n  }\n\n  /**\n   * Syncs the tab group navigation with the current state of the tab group.\n   *\n   * This is called every time the user:\n   * - adds or removes a tab or panel\n   * - changes the placement of the tabs\n   * - enables or disables the scroll controls\n   *\n   * If the tabs container is scrollable and the scroll controls are enabled,\n   * the scroll buttons are displayed and the resize observer is started,\n   * otherwise they are hidden and the resize observer is stopped.\n   */\n  #syncNav() {\n    const navContainer = this.shadowRoot.querySelector('.tab-group__nav');\n    const scrollButtons = Array.from(this.shadowRoot.querySelectorAll('.tab-group__scroll-button'));\n\n    if (this.noScrollControls || this.placement === PLACEMENT_START || this.placement === PLACEMENT_END) {\n      this.#stopResizeObserver();\n      scrollButtons.forEach(el => el.hidden = true);\n      navContainer.classList.remove('tab-group__nav--scrollable');\n    } else {\n      this.#startResizeObserver();\n      scrollButtons.forEach(el => el.hidden = false);\n    }\n  }\n\n  /**\n   * Starts the panel transition.\n   * If the panel transition is enabled, the callback is called when the transition is complete.\n   *\n   * @param {function} [callback = () => {}]\n   */\n  #startPanelTransition(callback = () => {}) {\n    const isPanelTransitionEnabled = typeof document.startViewTransition === 'function'\n      && window.matchMedia('(prefers-reduced-motion: no-preference)').matches\n      && this.#shouldPanelTransitionBeEnabled\n      && this.panelTransition;\n\n    isPanelTransitionEnabled ? document.startViewTransition(callback) : callback();\n  }\n\n  /**\n   * https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n   * This is to safe guard against cases where, for instance, a framework may have added the element to the page and set a\n   * value on one of its properties, but lazy loaded its definition. Without this guard, the upgraded element would miss that\n   * property and the instance property would prevent the class property setter from ever being called.\n   */\n  #upgradeProperty(prop) {\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n\n  /**\n   * Selects the tab at the given index.\n   * If the tab at the given index is disabled or already selected, this method does nothing.\n   *\n   * @param {Number} index The index of the tab to be selected.\n   */\n  selectTabByIndex(index) {\n    const tabs = this.#allTabs();\n    const tab = tabs[index];\n\n    this.selectTab(tab);\n  }\n\n  /**\n   * Selects the given tab.\n   * If the given tab is disabled or already selected, this method does nothing.\n   *\n   * @param {HTMLElement} tab The tab to be selected.\n   */\n  selectTab(tab) {\n    if (tab && !tab.disabled && !tab.selected) {\n      this.#markTabSelected(tab);\n\n      // Queue a microtask to ensure that the tab is focused on the next tick.\n      setTimeout(() => tab.focus(), 0);\n\n      this.dispatchEvent(new CustomEvent(`${A_TAB}-select`, {\n        bubbles: true,\n        composed: true,\n        detail: { tabId: tab.id }\n      }));\n    }\n  }\n}\n\nif (window.customElements && !window.customElements.get(A_TAB_GROUP)) {\n  window.customElements.define(A_TAB_GROUP, TabGroup);\n}\n","const A_TAB = 'a-tab';\nconst template = document.createElement('template');\nlet tabCounter = 0;\n\ntemplate.innerHTML = /* html */`\n  <style>\n    .tab {\n      display: inline-flex;\n      align-items: center;\n      gap: 0.5rem;\n      padding: 0.375rem 0.75rem;\n      white-space: nowrap;\n      cursor: pointer;\n    }\n\n    :host([disabled]) .tab {\n      opacity: 0.7;\n      cursor: not-allowed;\n    }\n\n    :host([selected]) .tab {\n      color: var(--selected-tab-color);\n      background-color: var(--selected-tab-bg-color);\n    }\n\n    .tab__close {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0.25rem;\n      font-size: inherit;\n      cursor: pointer;\n    }\n  </style>\n\n  <div part=\"base\" class=\"tab\">\n    <slot></slot>\n  </div>\n`;\n\n/**\n * `Tab` is a tab for a `<a-tab-group>` tab panel.\n * `<a-tab>` should always be used with `role=heading` in the markup so that the\n * semantics remain useable when JavaScript is failing.\n *\n * A `<a-tab>` declares which `<a-tab-panel>` it belongs to by\n * using that panel's ID as the value for the `aria-controls` attribute.\n *\n * A `<a-tab>` will automatically generate a unique ID if none is specified.\n */\nclass Tab extends HTMLElement {\n  static get observedAttributes() {\n    return ['selected', 'disabled', 'closable'];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  connectedCallback() {\n    this.#upgradeProperty('selected');\n    this.#upgradeProperty('disabled');\n    this.#upgradeProperty('closable');\n\n    if (!this.id) {\n      this.id = `a-tab-generated-${tabCounter++}`;\n    }\n\n    this.setAttribute('role', 'tab');\n    this.setAttribute('aria-selected', 'false');\n    this.setAttribute('tabindex', this.disabled ? -1 : 0);\n  }\n\n  disconnectedCallback() {\n    const closeButton = this.shadowRoot.querySelector('.tab__close');\n    closeButton?.removeEventListener('click', this.#onCloseButtonClick);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'selected' && oldValue !== newValue) {\n      this.setAttribute('aria-selected', this.selected);\n    }\n\n    if (name === 'disabled' && oldValue !== newValue) {\n      this.setAttribute('aria-disabled', this.disabled);\n      this.setAttribute('tabindex', this.disabled ? -1 : 0);\n    }\n\n    if (name === 'closable' && oldValue !== newValue) {\n      if (this.closable) {\n        const closeButton = document.createElement('span');\n        closeButton.className = 'tab__close';\n        closeButton.part = 'close-tab';\n        closeButton.innerHTML = /* html */`<svg part=\"close-tab-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.875em\" height=\"0.875em\" fill=\"currentColor\" viewBox=\"0 0 16 16\"><path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\"/></svg>`;\n        this.shadowRoot.querySelector('.tab').appendChild(closeButton);\n        closeButton.addEventListener('click', this.#onCloseButtonClick);\n      } else {\n        const closeButton = this.shadowRoot.querySelector('.tab__close');\n        closeButton?.removeEventListener('click', this.#onCloseButtonClick);\n        closeButton?.remove();\n      }\n    }\n  }\n\n  get selected() {\n    return this.hasAttribute('selected');\n  }\n\n  set selected(value) {\n    if (value) {\n      this.setAttribute('selected', '');\n    } else {\n      this.removeAttribute('selected');\n    }\n  }\n\n  get disabled() {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(value) {\n    if (value) {\n      this.setAttribute('disabled', '');\n    } else {\n      this.removeAttribute('disabled');\n    }\n  }\n\n  get closable() {\n    return this.hasAttribute('closable');\n  }\n\n  set closable(value) {\n    if (value) {\n      this.setAttribute('closable', '');\n    } else {\n      this.removeAttribute('closable');\n    }\n  }\n\n  /**\n   * Handles the click event on the close button.\n   *\n   * @param {MouseEvent} evt The click event.\n   */\n  #onCloseButtonClick = evt => {\n    evt.stopPropagation();\n\n    this.dispatchEvent(new CustomEvent(`${A_TAB}-close`, {\n      bubbles: true,\n      composed: true,\n      detail: { tabId: this.id }\n    }));\n  };\n\n  /**\n   * https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n   * This is to safe guard against cases where, for instance, a framework may have added the element to the page and set a\n   * value on one of its properties, but lazy loaded its definition. Without this guard, the upgraded element would miss that\n   * property and the instance property would prevent the class property setter from ever being called.\n   */\n  #upgradeProperty(prop) {\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n}\n\nif (window.customElements && !window.customElements.get(A_TAB)) {\n  window.customElements.define(A_TAB, Tab);\n}\n","const A_TAB_PANEL = 'a-tab-panel';\nconst template = document.createElement('template');\nlet panelCounter = 0;\n\ntemplate.innerHTML = /* html */`\n  <div part=\"base\" class=\"tab-panel\">\n    <slot></slot>\n  </div>\n`;\n\n/**\n * `TabPanel` is a panel for a `<a-tab-group>` tab panel.\n */\nclass TabPanel extends HTMLElement {\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  connectedCallback() {\n    this.setAttribute('role', 'tabpanel');\n\n    if (!this.id) {\n      this.id = `a-tab-panel-generated-${panelCounter++}`;\n    }\n  }\n}\n\nif (window.customElements && !window.customElements.get(A_TAB_PANEL)) {\n  window.customElements.define(A_TAB_PANEL, TabPanel);\n}\n"],"names":["$4b127c96b8d62b28$var$A_TAB","$4b127c96b8d62b28$var$template","document","createElement","$4b127c96b8d62b28$var$tabCounter","innerHTML","$4b127c96b8d62b28$var$Tab","HTMLElement","observedAttributes","constructor","shadowRoot","attachShadow","mode","appendChild","content","cloneNode","connectedCallback","upgradeProperty","id","setAttribute","disabled","disconnectedCallback","closeButton","querySelector","removeEventListener","onCloseButtonClick","attributeChangedCallback","name","oldValue","newValue","selected","closable","className","part","addEventListener","remove","hasAttribute","value","removeAttribute","evt","stopPropagation","dispatchEvent","CustomEvent","bubbles","composed","detail","tabId","prop","Object","prototype","hasOwnProperty","call","window","customElements","get","define","$17a63ddf0f11756d$var$A_TAB_PANEL","$17a63ddf0f11756d$var$template","$17a63ddf0f11756d$var$panelCounter","$17a63ddf0f11756d$var$TabPanel","$6ed9897cfe6c2018$var$A_TAB_GROUP","$6ed9897cfe6c2018$var$A_TAB","$6ed9897cfe6c2018$var$A_TAB_PANEL","$6ed9897cfe6c2018$var$PLACEMENT_BOTTOM","$6ed9897cfe6c2018$var$PLACEMENT_START","$6ed9897cfe6c2018$var$ACTIVATION_AUTO","$6ed9897cfe6c2018$var$ACTIVATION_MANUAL","$6ed9897cfe6c2018$var$KEYCODE","DOWN","LEFT","RIGHT","UP","HOME","END","ENTER","SPACE","$6ed9897cfe6c2018$var$template","$6ed9897cfe6c2018$var$TabGroup","shouldPanelTransitionBeEnabled","resizeObserver","tabSlot","panelSlot","tabsContainer","navContainer","scrollButtons","Array","from","querySelectorAll","handleSlotChange","handleTabClick","handleKeyDown","forEach","el","handleScrollButtonClick","handleTabClose","ResizeObserver","entries","entry","targetElement","target","isElementScrollable","scrollWidth","borderBoxSize","inlineSize","clientWidth","hidden","classList","toggle","syncNav","allTabs","length","placement","stopResizeObserver","getAttribute","noScrollControls","scrollDistance","Math","abs","activation","panelTransition","startResizeObserver","scrollElement","unobserve","observe","disconnect","linkPanels","tabs","tab","panel","nextElementSibling","tagName","toLowerCase","console","error","find","markTabSelected","allPanels","panelForTab","panelId","firstTab","lastTab","i","prevTab","newIdx","findIndex","matches","nextTab","altKey","code","focus","selectTab","preventDefault","closest","scrollButton","direction","contains","scrollBy","left","reset","panels","startPanelTransition","newTab","newPanel","callback","isPanelTransitionEnabled","startViewTransition","matchMedia","selectTabByIndex","index","setTimeout"],"version":3,"file":"a-tab-group.js.map"}